Our general objective is to turn foundational advances in type theory
- namely Homotopy Type Theory (HoTT) - into foundational advances in
programming languages and program verification. In more detail, we
have the following objectives.

1. Develop a constructive model theory of HoTT which can act as a
foundation for HoTT-based computation.

2. Develop a type theory for HoTT within which all terms (even those
using Univalence) reduce to values.

3. Extend the above semantic and syntactic research to cover HITs.

4. Use the above to reformulate the treatment of effects using HoTT.

5. Formally verify key properties of HoTT, our HoTT-based programming
and verification tools, and programs written using those tools.

6. Develop a basic HoTT-based programming language and verification
system.

7. Extend this with features to make programming and verification
easier.

8. Use the above to generalise Units of Measure to other algebraically
indexed types.
